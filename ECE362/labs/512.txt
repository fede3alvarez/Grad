;**************************************************************
;* This stationery serves as the framework for a              *
;* user application. For a more comprehensive program that    *
;* demonstrates the more advanced functionality of this       *
;* processor, please see the demonstration applications       *
;* located in the examples subdirectory of the                *
;* Freescale CodeWarrior for the HC12 Program directory       *
;**************************************************************
; Include derivative-specific definitions
            INCLUDE 'derivative.inc'

; export symbols
            XDEF Entry, _Startup, main
            ; we use export 'Entry' as symbol. This allows us to
            ; reference 'Entry' either in the linker .prm file
            ; or from C/C++ later on

            XREF __SEG_END_SSTACK      ; symbol defined by the linker for the end of the stack




; variable/data section
MY_EXTENDED_RAM: SECTION
; Insert here your data definition.
VAR_1:    ds.b  1

MY_CONSTANT_ROM: SECTION
port_t:     equ  $240
port_s:     equ  $248
ddr_s:      equ  $24A

; code section
MyCode:     SECTION
main:
_Startup:
Entry:
            LDS  #__SEG_END_SSTACK          ; initialize the stack pointer
            CLI                             ; enable interrupts

            BSET  ddr_s, #$FF               ; port s / LED setuo
            MOVB  #$EC, VAR_1               ; Initialize VAR_1 to $EC 
            
            BSET  port_s, #$FF              ; Light LEDs
            BCLR  port_s, #$FF              ; Clear LEDs

            
Wait_S2L:   BRSET port_t, #$02, Wait_S2L   ; Branch back if not set
            MOVB  VAR_1, port_s             ; If set write VAR_1 to LED
           
Wait_S2H:   BRCLR port_t, #$02, Wait_S2H   ; Branch back if not set
            MOVB  VAR_1, port_s             ; If set write VAR_1 to LED
            nop
            end